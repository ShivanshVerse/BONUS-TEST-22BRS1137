# -*- coding: utf-8 -*-
"""BAT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TNK0GO4j_59eD9Gt8xB-jnQ8-RIL9L4-

Q1) Write a Python program using while loop to read numbers until -1 is encountered. Count the numbers divisible by 4 and not divisible by 4 and display them.

Input: Get numbers using while loop until -1 is encountered separated by a space and not tab

Output: Display the count of the numbers divisible by 4 using the variable named Four_Divisible_Count and the count of the numbers not divisible by 4 using the variable named Four_Not_Divisible_Count
"""

Four_Divisible_Count=0
Four_Not_Divisible_Count=0
while True:
   n=int(input())
   if n==-1:
     break
   elif n%4==0:
      Four_Divisible_Count+=1
   else:
      Four_Not_Divisible_Count+=1
print("Four_Divisible_Count is",Four_Divisible_Count)
print("Four_Not_Divisible_Count is",Four_Not_Divisible_Count)

"""Q2) Write a Python program using while loop to read the numbers until -1 is encountered. Count the number of prime and composite numbers entered by the user. 

Input: Numbers are given one after the other in separate lines. Give the last number as -1. 

Output: Print the count of the prime numbers using the variable name PrimeCount and the count of composite numbers using the variable name CompositeCount.
"""

def PrimeCheck(n):
  count=0
  for i in range(1,n+1,1):
    if(n%i==0):
      count+=1
  if(count==2):
    return True
  else:
    return False
PrimeCount=0
CompositeCount=0
while True:
  n=int(input())
  if n==-1:
    break
  elif PrimeCheck(n):
    PrimeCount+=1
  elif n!=1:
    CompositeCount+=1
print("primecount is",PrimeCount)
print("compositecount is",CompositeCount)

"""Q3)Write a Python Code to check whether the number that is given by the user is a STRONG number or not.
Continue getting the numbers till -1 is pressed by the user. Display the count of both the cases.

Input: Get values one after the other from the user till the user enters -1.

Output: Display the count of STRONG and NOT_STRONG numbers
"""

STRONG=0
NOT_STRONG=0
fact=1
X=0
def fact(n):
  factorial=1
  for i in range(1,int(n+1)):
    factorial*=i
  return factorial
while True:
  n=int(input())
  if n==-1:
    break
  else:
    s=n
    sum=0
    while (s>0):
      d=s%10
      x=fact(d)
      sum=sum+x
      s=s/10
    if(sum==n):
      STRONG+=1
    else:
      NOT_STRONG+=1
print("STRONG_NUMBERS_COUNT is",STRONG)
print("NON_STRONG_NUMBERS_COUNT is",NOT_STRONG)

"""Q4)Write a program that takes your full name as input and displays the abbreviations of
the first and middle names except the last name which is displayed as it is. For example, if your name is Robert Brett Roser, then the output should be R.B.Roser  
"""

n=input()
ss=n.split()
length=len(ss)
l=[]
for i in range(1,length):
  k=ss[i-1]
  l.append(k[0])
  l.append(".")
l.append(ss[length-1])
for i in l:
  print(i,end="")

"""Q5)Write a Python code to display the second largest number in the given list of numbers without sorting the list.

Input: Set of numbers are given in the Python data structure named list.

Output: Second largest number in that list is display.
"""

l=[]
while True:
  n=int(input())
  if n==-1:
    break
  else:
    l.append(n)
maximum=max(l)
l.remove(maximum)
maximum=max(l)
print(maximum)